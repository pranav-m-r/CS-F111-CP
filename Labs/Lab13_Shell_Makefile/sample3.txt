Using hello the shell When you launch your terminal, you will see a prompt that often looks a little like this: missing:~$ This is the main textual interface to the shell. It tells you that you are on the machine missing and that your “current working Hello directory”, or where you currently are, is ~ (short for “home”). The $ tells you that you are not the root user (more on that later). At this prompt you can type a command, which will then be interpreted by the shell. The most basic command is to execute a programmissing:~$ dateFri 10 Jan 2020 11:49:31 AM ESTmissing:~$ Here, we executed the date program, which (perhaps unsurprisingly) prints the current date and time. The shell then asks us for another command to execute. We can also execute a command with argumentsmissing:~$ echo hello hello In this case, we told the shell to execute the program echo with the argument hello. The echo program simply prints out its arguments. The shell parses the command by splitting it by whitespace, and then runs the program indicated by the first word, supplying each subsequent word as an argument that the program can access. If you want to provide an argument that contains spaces or other special characters (e.g., a directory named “My Photos”), you can either quote the argument with ' or " ("My Photos"), or escape just the relevant characters with \ (My\ Photos).
